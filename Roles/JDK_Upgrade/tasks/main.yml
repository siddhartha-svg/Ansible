---
# tasks file for jdkupgrade

- name: Define general variables
  set_fact:
    ansible_user: "madmin"
    ansible_group: "madmin"
    artifactory_url: "https://oneartifactory.horizon.com/artifactory/RBMV_AWS/SOFTWARE/JDK"
    auth_credentials: "madmin:your_secret_token"

- name: Copy JDK upgrade script to the server
  copy:
    src: jdk_upgrade.sh
    dest: /opt/app/jdk_upgrade.sh
    mode: '0755'

- name: Run JDK upgrade script
  command: /opt/app/jdk_upgrade.sh

- name: Remove old JDK 1.8 directory
  file:
    path: "/opt/app/{{ jdk_8_version_old }}"
    state: absent

- name: Remove old JDK 1.8 symlink
  file:
    path: /opt/app/JDK
    state: absent

- name: Download new JDK 1.8
  get_url:
    url: "{{ artifactory_url }}/{{ jdk_8_tar }}"
    dest: "/opt/app/{{ jdk_8_tar }}"
    headers:
      Authorization: "Basic {{ auth_credentials | b64encode }}"
  ignore_errors: no

- name: Extract new JDK 1.8
  unarchive:
    src: "/opt/app/{{ jdk_8_tar }}"
    dest: /opt/app/
    remote_src: yes
  
- name: Set permissions for new JDK 1.8
  file:
    path: "/opt/app/{{ jdk_8_version }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_group }}"
    recurse: yes

- name: Create symlink for JDK 1.8
  file:
    src: "{{ jdk_8_version }}"
    dest: /opt/app/JDK
    state: link
    force: yes
  args:
    chdir: /opt/app

- name: Verify JDK 1.8 symlink
  shell: ls -l /opt/app/JDK

- name: Remove new JDK 1.8 tarball
  file:
    path: "/opt/app/{{ jdk_8_tar }}"
    state: absent

- name: Remove old JDK 17 directory
  file:
    path: "/opt/app/{{ jdk_17_version_old }}"
    state: absent

- name: Remove old JDK 17 symlink
  file:
    path: /opt/app/jdk17
    state: absent
  
- name: Download new JDK 17
  get_url:
    url: "{{ artifactory_url }}/{{ jdk_17_tar }}"
    dest: "/opt/app/{{ jdk_17_tar }}"
    headers:
      Authorization: "Basic {{ auth_credentials | b64encode }}"
  ignore_errors: no

- name: Extract new JDK 17
  unarchive:
    src: "/opt/app/{{ jdk_17_tar }}"
    dest: /opt/app/
    remote_src: yes

- name: Set permissions for new JDK 17
  file:
    path: "/opt/app/{{ jdk_17_version }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_group }}"
    recurse: yes

- name: Remove new JDK 17 tarball
  file:
    path: "/opt/app/{{ jdk_17_tar }}"
    state: absent

- name: Unlink old JDK symlink
  file:
    path: /opt/app/jdk
    state: absent

- name: Create symlink for JDK 17
  file:
    src: "{{ jdk_17_version }}"
    dest: /opt/app/jdk17
    state: link
    force: yes
  args:
    chdir: /opt/app

- name: Verify JDK 17 symlink
  shell: ls -l /opt/app/jdk17

- name: Final fix - ensure all files in /opt/app are owned by the specified user and group
  file:
    path: /opt/app
    owner: "{{ ansible_user }}"
    group: "{{ ansible_group }}"
    recurse: yes
